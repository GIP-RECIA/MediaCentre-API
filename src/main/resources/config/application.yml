spring:
  config:
    activate:
      on-profile: 'default-config'

---

server:
  port: 8090
  servlet:
    context-path: /spring-api

logging:
  config: 'classpath:logback.xml'

spring:
  application:
    name: MediaCentre

  profiles:
    active: @spring.profiles.active@
    group:
      prod: prod
      dev: dev
      test: test
      ci: test

  cache:
    jcache:
      config:
        "classpath:ehcache.xml"

app:
  cors:
    enable: true
    allow-credentials: true
    allowed-origins:

    exposed-headers:
      - x-auth-token
      - x-requested-with
      - x-xsrf-token
    allowed-headers:
      - content-type
      - authorization
      - x-com-persist
      - X-Auth-Token
      - x-auth-token
      - x-requested-with
      - x-xsrf-token
    allowed-methods:
      - GET
      - PUT
      - POST
      - DELETE

  soffit:
    signatureKey: ''
    encryptionPassword: ''

viewResCache: false

hostnames:
  trusted:

mapping:
  uaiList:
  uaiCurrent:
  garId:
  profiles:
  otherUserInfoAttributes:
  groups: # name that the groups collection must be given went sent to mediacentre-WS

filters:
  categoriesByProfiles:

config:
  groups:

gestionaffectations:
  objects:
    - id: "" # must be unique for each object but does not relate to anything
      link: true
      title: ""
      description: ""
      regexp: ""


url:
  ressources:
    mediacentre: ""

mock:
  status: 0 # 0 = no mock, 1 = mock MediaCentreService return mock values and filter it using UAI provided by request, 2 = return all mock values without filtering
  mockedDataLocation: ''
  mockedDTOLocation: ''
