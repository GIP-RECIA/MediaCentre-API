server:
  port: 8090
  servlet:
    context-path: /the-path

  error:
    whitelabel.enabled: true
    include-binding-errors: always
    include-exception: true
    include-message: always
    include-stacktrace: always

logging:
  config: 'classpath:logback-dev.xml'

hostnames:
  trusted:
    - "full.address.ext"

spring:
  config:
    activate:
      on-profile: 'dev'
  application:
    name: MediaCentre

  profiles:
    active: @spring.profiles.active@
    group:
      prod: prod
      dev: dev
      test: test
      ci: test

  cache:
    jcache:
      config:
        "classpath:ehcache.xml"
app:
  cors:
      enable: true
      allow-credentials: true
      allowed-origins:
        - http://full.address.domain.ext
        - https://*.domain.ext
      exposed-headers:
        - x-auth-token
        - x-requested-with
        - x-xsrf-token
      allowed-headers:
        - content-type
        - authorization
        - x-com-persist
        - X-Auth-Token
        - x-auth-token
        - x-requested-with
        - x-xsrf-token
      allowed-methods:
        - GET
        - PUT
        - POST
        - DELETE
  soffit:
    signatureKey: 'aJwtSignatureKey'

viewResCache: false


mapping:
  uaiList: "ValueInSoffit"
  uaiCurrent: "ValueInSoffit"
  garId: "ValueInSoffit"
  profiles: "ValueInSoffit"
  otherUserInfoAttributes:
    - "ValueInSoffit"
    - "ValueInSoffit"
  groups: "isMemberOf" #name that the groups collection must be given went sent to mediacentre-WS

filters:
  categoriesByProfiles:
    - profiles:
        - 'profile1'
      filters:
        - filter1
        - filter2
    - profiles:
        - 'profile2'
        - 'profile3'
        - 'profile4'
      filters:
        - filter3
        - filter4
        - filter5

config:
  groups:
    - "groupRegex1"
    - "groupRegex2"
  paramUserEtabsURl: "PATH/rest/v1/structures/etabs/?codes="
  paramUserEtabsDisplayNameKey: "displayName"

gestionaffectations:
  objects:
    - id: "id" # must be unique for each object but does not relate to anything
      link: true
      title: "hyperlink text value if link is true, modal button text if link is false"
      description: "link to redirect to if link is true | modal html content if link is false"
      regexp: "regexp"

url:
  ressources:
    mediacentre:
      "mediacentre-WS url"

mock:
  status: 0
  mockedDataLocation: 'mocked/data/location/mock-data.json'
  mockedDTOLocation: 'mocked/dto/location/mock-data.json'
